# dxdwire_sim.fcl

# David Adams
# July 2016

# Build DXD histograms for Wire data.

#include "dxdisplay_module.fcl"
#include "services_dune.fcl"

process_name: dxrun

services: {
  TimeTracker:       {}
  @table::dune35tdata_reco_services
  RawDigitExtractService: @local::rdx_std
  RawDigitPrepService: @local::adcprep_readraw
}

#source: @local::split_events
#source.ADCsOverThreshold: 100

physics: {

  #define the output stream, there could be more than one if using filters 
  stream1:  [ out1 ]

  analyzers: {
    DXDisplay: @local::dxdisplay_default
  }

  analysis: [ DXDisplay ]

  end_paths: [ stream1, analysis ]
}

outputs: {
  out1: {
    dataTier: "raw"
    module_type: RootOutput
    fileName:    "dxdwire.root" 
    #default file name, can override from command line with -o or --output
  }
}

physics.analyzers.DXDisplay.DoEventTree:               true
physics.analyzers.DXDisplay.DoRawDigit:                true
physics.analyzers.DXDisplay.DoSimChannelSignalHists:   true
physics.analyzers.DXDisplay.DoDeconvolutedSignalHists: true
physics.analyzers.DXDisplay.TdcTickMax:                3200
physics.analyzers.DXDisplay.DebugLevel: 4

services.RawDigitAnalysisService: @local::tools.rda_online
services.RawDigitAnalysisService.LogLevel:           2
services.RawDigitAnalysisService.DoMean:          true
services.RawDigitAnalysisService.DoAllOnline:     true
services.RawDigitAnalysisService.DoAll:           true
services.RawDigitAnalysisService.DoAllFlag:       true
services.RawDigitAnalysisService.DoROPs:          true
services.RawDigitAnalysisService.DoZSROPs:       false
services.RawDigitAnalysisService.NchanMeanRms:     100
services.RawDigitAnalysisService.TdcTickMax:      3200
services.RawDigitAnalysisService.UseChannelMap:  false
services.RawDigitAnalysisService.BadChannelFlag:     0 # 1=skip bad channels
services.RawDigitAnalysisService.SkipStuckBits:  false

