#!/bin/bash

HELP=
INFILE=
FLAGS=
while getopts hi:b OPT; do
  case $OPT in
  h) HELP=true;;
  i) INFILE=$OPTARG;;
  b) FLAGS="-b";;
  esac
done
shift $(( OPTIND-1 ))

if [ -n "$HELP" ]; then
  echo Usage: $0 [-h] [-i INFILE] ARGS
  echo Starts Root with the argment list ARGS.
  echo Options:
  echo "  -h: Show this message and exit."
  echo "  -i: Open DXDISPLAY file INFILE before processing ARGS"
  echo "  -b: Run root in batch mode (no graphics)"
  exit 0
fi

# Find the root script directory.
if [ -z "$DUNE_EXTENSIONS_ROOTSCRIPTS" ]; then
  if [ -n "$DUNE_EXTENSIONS_DIR" ]; then
    if [ -r $DUNE_EXTENSIONS_DIR/rootscripts ]; then
      export DUNE_EXTENSIONS_ROOTSCRIPTS=$DUNE_EXTENSIONS_DIR/rootscripts
    else
      echo Unable to find rootscripts in dune_extensions product at
      echo "  $DUNE_EXTENSIONS_DIR"
      echo Remedy this or define DUNE_EXTENSIONS_ROOTSCRIPTS
      exit 3
    fi
  else
    echo "Please set up dune_extensions or define DUNE_EXTENSIONS_ROOTSCRIPTS "
    exit 1
  fi
fi

if [ ! -r rootlogon.C ]; then
  echo Creating dune_extensions rootlogon
  FILE=$DUNE_EXTENSIONS_ROOTSCRIPTS/client_rootlogon.C
  if [ ! -r $FILE ]; then
    echo "Unable to find $FILE"
    exit 2
  fi
  cp $FILE rootlogon.C
fi

ARG=
if [ -n "$INFILE" ]; then
  ARG='dxopen.C("'$INFILE'")'
fi
 
# Root6 seems to expect this symbol to be defined as part of include path.
export CPP0X_INC=.

root.exe $FLAGS $ARG $*
